# docker-compose.yml
services:
  php:
    platform: linux/amd64
    env_file: ./.env
    depends_on:
      - db
    build:
      context: ${PROJECT_DIR}
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=${APP_NAME}
        - TZ=${TZ}
        - MELIS_PLATFORM=${MELIS_PLATFORM}
        - MELIS_MODULE=${MELIS_MODULE}
      cache_from:
        - php:8.3-apache
      x-bake:
        platforms: ["linux/amd64"]
        cache-from: ["type=local,src=/tmp/.buildx-cache"]
        cache-to: ["type=local,dest=/tmp/.buildx-cache"]
    ports:
      - "8080:80"
    volumes:
      - type: bind
        source: ${PROJECT_DIR}
        target: /var/www/${APP_NAME}
      - composer-cache:/root/.composer/cache
    environment:
      MELIS_PLATFORM: ${MELIS_PLATFORM}
      MELIS_MODULE: ${MELIS_MODULE}
    networks:
      - melis

  db:
    image: mysql:${MYSQL_VERSION}
    platform: linux/amd64
    env_file: ./.env
    volumes:
      - melis_mysql_data:/var/lib/mysql
    restart: always
    ports:
      - "33060:${MYSQL_PORT}"
    environment:
      MYSQL_HOSTNAME: ${MELIS_CONTAINER_NAME}-db:${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    command:
      [
        "mysqld",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_general_ci",
      ]
    networks:
      - melis

networks:
  melis:

volumes:
  melis_mysql_data:
  composer-cache:
